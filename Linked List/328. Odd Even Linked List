# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def oddEvenList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head is None or head.next is None:
            return head
        head_odd = None
        head_even = None
        idx = 1
        while head:
            if idx % 2 == 0:
                if head_even is None:
                    head_even = head
                    temp_even = head_even
                else:
                    temp_even.next = head
                    temp_even = temp_even.next

            else:
                if head_odd is None:
                    head_odd = head
                    temp_odd = head_odd
                else:
                    temp_odd.next = head
                    temp_odd = temp_odd.next
            head = head.next
            idx += 1
        temp_odd.next  = None
        temp_even.next  = None
        temp_odd.next = head_even
        return head_odd



        