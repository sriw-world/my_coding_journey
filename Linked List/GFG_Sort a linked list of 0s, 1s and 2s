#User function Template for python3
'''
    Your task is to segregate the list of 
    0s,1s and 2s.
    
    Function Arguments: head of the original list.
    Return Type: head of the new list formed.

    {
        # Node Class
        class Node:
            def __init__(self, data):   # data -> value stored in node
                self.data = data
                self.next = None
    }

'''
class Solution:
    #Function to sort a linked list of 0s, 1s and 2s.
    def segregate(self, head):
        if not head or not head.next:
            return head
    
        # Create three dummy nodes to point to beginning of 
        # three linked lists. These dummy nodes are created to 
        # avoid null checks. 
        zeroD = Node(0)
        oneD = Node(0)
        twoD = Node(0)
    
        # Initialize current pointers for three 
        # lists 
        zero = zeroD
        one = oneD
        two = twoD
    
        # Traverse list 
        curr = head
        while curr:
            if curr.data == 0:
              
                # If the data of current node is 0, 
                # append it to pointer zero and update zero
                zero.next = curr
                zero = zero.next
            elif curr.data == 1:
              
                # If the data of cu
                # append it to pointer one and update one
                one.next = curr
                one = one.next
            else:
                # If the data of current node is 2, 
                # append it to pointer two and update two
                two.next = curr
                two = two.next
            curr = curr.next
    
        # Combine the three lists
        zero.next = oneD.next if oneD.next else twoD.next
        one.next = twoD.next
        two.next = None
    
        # Updated head 
        head = zeroD.next
        return head
        


