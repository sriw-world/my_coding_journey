class Solution:
    def rowWithMax1s(self, arr):
        # code here
        def count_1(row,search):
            low = 0
            high = len(row) - 1
            cnt = 0
            while low <= high :
                mid = (low+high)//2
                if row[mid] == search:
                    cnt += 1
                    bkp_mid = mid
                    while bkp_mid > 0 and row[bkp_mid-1] == row[bkp_mid]:
                        cnt += 1
                        bkp_mid -= 1
                    while mid < len(row) -1 and row[mid] == row[mid+1]:
                        cnt += 1
                        mid += 1
                    return cnt
                
                elif row[mid] < search:
                    low = mid + 1
                else:
                    high = mid - 1
            return cnt
            
        index = -1
        maxsum = 0
        for row in range(len(arr)):
            if count_1(arr[row],1) > maxsum:
                maxsum = sum(arr[row])
                index = row
        return index