class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:
        ans = 0
        for no in nums:
            ans = ans ^ no           
        return ans
        

class Solution:
    def singleNonDuplicate(self, nums: List[int]) -> int:
        if len(nums) == 1:
            return nums[0]
        elif nums[0] != nums[1]:
            return nums[0]
        elif nums[-1] != nums[-2]:
            return nums[-1]
        low = 0
        high = len(nums) - 1
        if len(nums) % 2 == 0:
            return -1
        while low <= high:
            mid = (low+high)//2
            if nums[mid]!=nums[mid-1] and nums[mid]!= nums[mid+1]:
                return nums[mid]
            if (mid % 2 == 0 and nums[mid] == nums[mid+1]) or (mid % 2 != 0 and nums[mid] == nums[mid-1]) :
                low = mid + 1
            else:
                high = mid - 1 
        return -1