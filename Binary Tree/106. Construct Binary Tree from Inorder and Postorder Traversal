# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def buildTree(self, inorder: List[int], postorder: List[int]) -> Optional[TreeNode]:
        self.idx = len(inorder)-1
        def solve(inorder,postorder,start,end,idx):
            if start > end :
                return None

            rootval = postorder[self.idx]
            i = start
            for i in range(start,end+1):
                if inorder[i] == rootval:
                    break
            self.idx -= 1
            root = TreeNode(rootval)
            root.right = solve(inorder,postorder,i+1,end,self.idx)
            root.left = solve(inorder,postorder,start,i-1,self.idx)
            
            return root

        root = solve(inorder,postorder,0,len(inorder)-1,self.idx)
        return root
        